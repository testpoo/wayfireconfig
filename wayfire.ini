# 输入配置 ──────────────────────────────────────────────────────────

[input]
# xkb_layout = us,fr
# xkb_variant = dvorak,bepo
# xkb_options = grp:win_space_toggle
#
# See Input options for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration#input

# 键入时禁用触摸板
disable_touchpad_while_typing = true

# 使用鼠标时禁用触摸板
disable_touchpad_while_mouse = false

# 输出配置 ─────────────────────────────────────────────────────────

[output:eDP-1]
# mode = 1920x1080@60000
# position = 0,0
# transform = normal
scale = 1.250000
#
# 您可以使用 wlr-randr 获取输出的名称。
# https://github.com/emersion/wlr-randr
#
# 另请参阅 kanshi 以自动配置您的输出。
# https://wayland.emersion.fr/kanshi/
#
# 有关完整参考，请参阅输出选项。
# https://github.com/WayfireWM/wayfire/wiki/Configuration#output

# 核心选项 ─────────────────────────────────────────────────────────────────

[core]

# 要启用的插件列表。
# 有关完整列表，请参阅配置文档。
plugins = \
  alpha \
  animate \
  autostart \
  command \
  cube \
  decoration \
  expo \
  fast-switcher \
  fisheye \
  foreign-toplevel \
  grid \
  gtk-shell \
  idle \
  invert \
  move \
  oswitch \
  place \
  resize \
  session-lock \
  shortcuts-inhibit \
  switcher \
  vswitch \
  wayfire-shell \
  window-rules \
  wm-actions \
  wobbly \
  wrot \
  zoom

# 注意：[blur] 默认不开启，因为它可能会占用大量资源。
# 如果你愿意，可随时将其添加到列表中。
# 你可以在这里找到它的文档：
# https://github.com/WayfireWM/wayfire/wiki/Configuration#blur

# 关闭当前窗口。
close_top_view = <super> KEY_Q | <alt> KEY_F4

# 工作区排列成 3 × 3 的网格的：
vwidth = 3
vheight = 3

# 选择客户端装饰(client)或服务端装饰(server)
preferred_decoration_mode = client

# 鼠标绑定 ───────────────────────────────────────────────────────────────

# 按住 Super 和鼠标左键拖动窗口。
[move]
activate = <super> BTN_LEFT

# 使用鼠标右键和 Super 调整它们的大小。
[resize]
activate = <super> BTN_RIGHT

# 通过 Super 和滚动鼠标放大桌面。
[zoom]
modifier = <super>

# 通过使用 Super Alt 和滚动鼠标来更改不透明度。
[alpha]
modifier = <super> <alt>

# 用鼠标旋转窗口。
[wrot]
activate = <super> <ctrl> BTN_RIGHT

# 鱼眼效果。
[fisheye]
toggle = <super> <ctrl> KEY_F

# 启动命令 ─────────────────────────────────────────────────────────────

[autostart]

# 自动启动后台和面板。
# 如果要覆盖默认客户端，请设置为 false。
autostart_wf_shell = false

# 设置壁纸，启动面板并根据需要停靠。
# https://github.com/WayfireWM/wf-shell
#
# 这些由上面的 autostart_wf_shell 选项启动。
#
# background = wf-background
# panel = wf-panel
#
# 您也可以使用 wf-dock，
# 包含在 wf-shell 中，但默认未启用。
#
# dock = wf-dock

# 状态栏
bar = waybar

# 桌面背景
background = swaybg -i '/home/poo/图片/2.jpg'

# 输入法
ime = fcitx5

# 蓝牙
bluetooth = blueman-applet

# 输出配置
# https://wayland.emersion.fr/kanshi/
# outputs = kanshi

# 通知
# https://wayland.emersion.fr/mako/
notifications = mako

# 屏幕色温
# https://sr.ht/~kennylevinsen/wlsunset/
# gamma = wlsunset

# 空闲配置
# https://github.com/swaywm/swayidle
# https://github.com/swaywm/swaylock
idle = swayidle before-sleep swaylock

# XDG desktop portal
# 某些 GTK 应用程序需要
portal = /usr/libexec/xdg-desktop-portal

[idle]
toggle = <super> KEY_Z
screensaver_timeout = 300
dpms_timeout = 600
#
# 通过 Super z 禁用合成器的空闲。
# 这将在屏幕处于非活动状态 300 秒后锁定屏幕，然后关闭
# 再过 300 秒后睡眠。

# 应用 ─────────────────────────────────────────────────────────────────

[command]

# 启动终端
# https://github.com/dabisu/sakura
binding_terminal = <super> KEY_ENTER
command_terminal = sakura

# 启动启动器
# https://hg.sr.ht/~scoopta/wofi
binding_launcher = <super> <shift> KEY_ENTER
command_launcher = wofi -S drun -I -G -p "请输入程序名称"

# 屏幕锁定器
# https://github.com/swaywm/swaylock
binding_lock = <super> <shift> KEY_ESC
command_lock = swaylock

# 注销
# https://github.com/ArtsyMacaw/wlogout
# binding_logout = <super> KEY_ESC
# command_logout = wlogout

# 屏幕截图
# https://wayland.emersion.fr/grim/
# https://wayland.emersion.fr/slurp/
# https://github.com/bugaevc/wl-clipboard
binding_screenshot = KEY_PRINT
command_screenshot = grim - | wl-copy
binding_screenshot_interactive = <super> <shift> KEY_S
command_screenshot_interactive = grim -g "$(slurp)" - | wl-copy

# 音量控制
# https://github.com/pulseaudio
repeatable_binding_volume_up = KEY_VOLUMEUP
command_volume_up = pactl set-sink-volume @DEFAULT_SINK@ +5%
repeatable_binding_volume_down = KEY_VOLUMEDOWN
command_volume_down = pactl set-sink-volume @DEFAULT_SINK@ -5%
binding_mute = KEY_MUTE
command_mute = pactl set-sink-mute @DEFAULT_SINK@ toggle

# 屏幕亮度
# https://github.com/Hummer12007/brightnessctl
repeatable_binding_light_up = KEY_BRIGHTNESSUP
command_light_up = brightnessctl set 5%+
repeatable_binding_light_down = KEY_BRIGHTNESSDOWN
command_light_down = brightnessctl set 5%-

# 启停触摸板
binding_touchpad =  <super> KEY_LEFTCTRL
command_touchpad = /home/poo/公共/touchpad.sh

# 窗口 ──────────────────────────────────────────────────────────────────────

# 与窗口管理功能相关的动作。
#
[wm-actions]
toggle_fullscreen = <super> KEY_F
toggle_always_on_top = <super> KEY_X
toggle_sticky = <super> <shift> KEY_X

# 将窗口放置在输出的某些区域中。
[grid]
#
# ⇱ ↑ ⇲   │ 7 8 9
# ← f →   │ 4 5 6
# ⇱ ↓ ⇲ d │ 1 2 3 0
# ‾   ‾
slot_bl = <super> KEY_KP1
slot_b = <super> KEY_KP2
slot_br = <super> KEY_KP3
slot_l = <super> KEY_LEFT | <super> KEY_KP4
slot_c = <super> KEY_UP | <super> KEY_KP5
slot_r = <super> KEY_RIGHT | <super> KEY_KP6
slot_tl = <super> KEY_KP7
slot_t = <super> KEY_KP8
slot_tr = <super> KEY_KP9
# 恢复默认值.
restore = <super> KEY_DOWN | <super> KEY_KP0

# 使用动画更改活动窗口。
[switcher]
next_view = <alt> KEY_TAB
prev_view = <alt> <shift> KEY_TAB

# 简易窗口切换器。
[fast-switcher]
activate = <alt> KEY_ESC

# 工作区 ───────────────────────────────────────────────────────────────────

# 切换到工作区。
[vswitch]
binding_left = <ctrl> <super> KEY_LEFT
binding_down = <ctrl> <super> KEY_DOWN
binding_up = <ctrl> <super> KEY_UP
binding_right = <ctrl> <super> KEY_RIGHT
# 移动具有相同键绑定的焦点窗口，但添加了 Shift。
with_win_left = <ctrl> <super> <shift> KEY_LEFT
with_win_down = <ctrl> <super> <shift> KEY_DOWN
with_win_up = <ctrl> <super> <shift> KEY_UP
with_win_right = <ctrl> <super> <shift> KEY_RIGHT

# 将当前工作区行显示为多维数据集。
[cube]
activate = <ctrl> <alt> BTN_LEFT
# 切换到下一个或上一个工作区。
#rotate_left = <super> <ctrl> KEY_H
#rotate_right = <super> <ctrl> KEY_L

# 显示所有工作区的概述。
[expo]
toggle = <super> KEY_E
# 选择工作空间。
# 工作区排列成 3 × 3 的网格。
# 编号是从左到右，逐行排列的。
#
# ⇱ k ⇲
# h ⏎ l
# ⇱ j ⇲
# ‾   ‾
# 参见 core.vwidth 和 core.vheight 来配置网格。
select_workspace_1 = KEY_1
select_workspace_2 = KEY_2
select_workspace_3 = KEY_3
select_workspace_4 = KEY_4
select_workspace_5 = KEY_5
select_workspace_6 = KEY_6
select_workspace_7 = KEY_7
select_workspace_8 = KEY_8
select_workspace_9 = KEY_9

# 输出 ──────────────────────────────────────────────────────────────────────

# 更改聚焦输出。
[oswitch]
# 切换到下一个输出。
next_output = <super> KEY_O
# 窗户也是如此。
next_output_with_win = <super> <shift> KEY_O

# 反转整个输出的颜色。
[invert]
toggle = <super> KEY_I

# 发送切换菜单事件。
[wayfire-shell]
toggle_menu = <super>

# Rules ────────────────────────────────────────────────────────────────────────

# Example configuration:
#
# [window-rules]
# maximize_alacritty = on created if app_id is "Alacritty" then maximize
#
# You can get the properties of your applications with the following command:
# $ WAYLAND_DEBUG=1 alacritty 2>&1 | kak
#
# See Window rules for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration#window-rules
